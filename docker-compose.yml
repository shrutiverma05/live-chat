version: '3'
services:
   https-portal:
    image: steveltn/https-portal:1
    ports:
      - '443:443'
      - '80:80'
    links:
      - rocketchat
      - mongodb
      - dashboard
      - webwidget
      - ionic
      - proxy
      - server
      - chat21httpserver
      - chat21server
      - rabbitmq
      - mongo
      - redis
    restart: on-failure
    # environment:
    #   DOMAINS: 'uat.ml.novacept.io -> http://api:8000 , uat.nlu.ml.novacept.io -> http://nlu:8080 , uat.kb.novacept.io -> http://streamlit:8501 , uat.kb.node.novacept.io -> http://node:8051'
    #   STAGE: 'production' # Don't use production until staging works
    #   # FORCE_RENEW: 'true'
    #   WEBSOCKET: 'true'
    env_file:
      - .env
    volumes: 
      - https-portal-data:/var/lib/https-portal
    

   rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${RELEASE:-latest}
    restart: on-failure
    labels:
      traefik.enable: "true"
      traefik.http.routers.rocketchat.rule: Host(`${DOMAIN}`)
      traefik.http.routers.rocketchat.tls: "true"
      traefik.http.routers.rocketchat.entrypoints: https
      traefik.http.routers.rocketchat.tls.certresolver: le
    environment:
      MONGO_URL: "${MONGO_URL:-mongodb://mongodb:27017/rocketchat?replicaSet=rs0}"
      MONGO_OPLOG_URL: "${MONGO_URL:-mongodb://mongodb:27017/local?replicaSet=rs0}"
      ROOT_URL: https://uat.rocket.novacept.io
      PORT: ${PORT:-3000}
      DEPLOY_METHOD: docker
      DEPLOY_PLATFORM: ${DEPLOY_PLATFORM}
    env_file:
      - env.example
    depends_on:
      - mongodb
    # expose:
    #   - ${PORT:-3000}
    ports:
      - "3000:3000"
    
   mongodb:
    image: docker.io/bitnami/mongodb:${MONGODB_VERSION:-4.4}
    restart: on-failure
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: ${MONGODB_REPLICA_SET_NAME:-rs0}
      MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER:-27017}
      MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST:-mongodb}
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
      MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME:-mongodb}
      MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL:-true}
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD:-yes}
    env_file:
      - env.example
  
   dashboard:
    image: tiledesk/tiledesk-dashboard:2.3.12
    container_name: tiledesk-dashboard 
    environment: 
      - FEATURES_TOKEN=NAT:T-DEV:T-TRI:T-GRO:T-DEP:T-OPH:T-MTL:T-CAR:T-LBS:T-NOT:T-MTT:T-RAS:T-ANA:T-ACT:T-TIL:T-SUP:T-APP:T
      - "WIDGET_LOCATION=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/widget/launch.js"
      - BOT_CREDENTIAL_URL=/api/modules/dialogflow/botcredendials/
      - RASA_BOT_CREDENTIAL_URL=/api/modules/rasa/botcredendials/
      - SERVER_BASE_URL=/api/
      - CHAT_BASE_URL=/chat/
      - WIDGET_TEST_LOCATION=/widget/assets/twp/index.html
      - WS_URL
      - WS_URL_RELATIVE=/ws/      
      - BRAND_SRC
      - REMOTE_JS_SRC
      - CHAT21_ENGINE=mqtt
      - UPLOAD_ENGINE=native
      - PUSH_ENGINE=none
      - LOG_LEVEL=info
      - APPS_URL=/api/modules/apps/
      - PROMO_BANNER_URL
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_DATABASEURL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
      - FIREBASE_APP_ID
      - FIREBASE_VAPID
      - CHAT_STORAGE_PREFIX=chat_sv5
      - "API_BASEIMAGE_URL=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/api/"
    ports:
      - "4500:80" #use expose if you want to block external access

   webwidget:
    image: chat21/chat21-web-widget:5.0.51
    container_name: chat21-web-widget 
    ports: 
      - "4200:80" # specify port forewarding
    environment: 
      - CHAT21_ENGINE=mqtt
      - MQTT_APPID=tilechat
      - PUSH_ENGINE=none
      - LOG_LEVEL=info
      - FILE_UPLOAD_ACCEPT=*/*
      - "MQTT_ENDPOINT=${EXTERNAL_MQTT_BASE_URL:-ws://uat.tile.novacept.io}/mqws/ws"
      - "MQTT_APIENDPOINT=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/chatapi/api"      
      #- MQTT_LOGINSERVICE_ENDPOINT=/api/chat21/native/auth/createCustomToken      
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_DATABASEURL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
      - FIREBASE_TENANT=tilechat
      - UPLOAD_ENGINE=native
      - "API_URL=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/api/"
      - "TRANSLATIONS_URL=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/api/"
      #- API_BASEIMAGE_URL=https://firebasestorage.googleapis.com/v0/b/    For firebase
      - "API_BASEIMAGE_URL=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/api/"   
      - DASHBOARD_URL=/dashboard/   
      - AUTH_PERSISTENCE=LOCAL
      - ENBED_JS=true
   ionic:
    image: chat21/chat21-ionic:3.0.89
    container_name: chat21-ionic
    ports:
      - "8082:80" #use expose if you want to block external access   
    environment: 
      - DASHBOARD_URL=/dashboard/      
      - API_BASEIMAGE_URL=/api/
      - API_URL=/api/
      - FEATURES_TOKEN=NAT:T-DEV:T-TRI:T-GRO:T-DEP:T-OPH:T-MTL:T-CAR:T-LBS:T-NOT:T-MTT:T-RAS:T-ANA:T-ACT:T-TIL:T
      - WIDGET_TEST_LOCATION=/widget/assets/twp/index.html
      - PUSH_ENGINE=none
      - LOG_LEVEL=info
      - FILE_UPLOAD_ACCEPT=*/*
      - CHAT21_ENGINE=mqtt
      - MQTT_APPID=tilechat
      - "MQTT_ENDPOINT=${EXTERNAL_MQTT_BASE_URL:-ws://uat.tile.novacept.io}/mqws/ws"
      - MQTT_APIENDPOINT=/chatapi/api
      #- MQTT_LOGINSERVICE_ENDPOINT=/api/chat21/native/auth/createCustomToken
      - UPLOAD_ENGINE=native
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_DATABASEURL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
      - FIREBASE_TENANT=tilechat
      - FIREBASE_VAPID
      - SUPPORT_MODE=true
      - WRITE_TO_BUTTON=true
      - ARCHIVED_BUTTON=true
      - AUTH_PERSISTENCE=LOCAL
      - EMAIL_SECTION=true
      - CHAT_STORAGE_PREFIX=chat_sv5
      - WS_URL_RELATIVE=/ws/
   proxy:
    image: tiledesk/tiledesk-docker-proxy:v1.1.1
    container_name: tiledesk-docker-proxy   
    ports:
      - "8081:80" # specify port forewarding
    depends_on:
      - server
      - dashboard
      - webwidget
      - chat21httpserver
      - rabbitmq
    command: [nginx-debug, '-g', 'daemon off;']
    
   server:
    image: tiledesk/tiledesk-server:2.3.69
    container_name: tiledesk-server
    restart: always       
    environment: 
      - LOG_LEVEL=info
      - CHAT21_ENABLED=true
      - CHAT21_ENGINE=mqtt
      - CHAT21_URL=http://chat21httpserver:8004
      - CHAT21_JWT_SECRET=tokenKey
      - CHAT21_APPID=tilechat
      - RESTHOOK_ENABLED=true
      - ALLOW_REOPEN_CHAT=true
      - CHAT21_ADMIN_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzNDU2MTBkNy03MmYxLTQ5OWUtODQzMS0xMTNhZWJkOWVmOTgiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNjE0OTQzNDkyLCJleHAiOjE5MjU5ODM0OTIsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.KptGMsTKjd3wUiiP1GGSTYqW1XXK1vjSRJnetC3wjxU
      - MONGODB_URI=mongodb://mongo/tiledesk
      - EMAIL_ENABLED
      - EMAIL_HOST
      - EMAIL_USERNAME
      - EMAIL_SECURE
      - EMAIL_PORT
      - EMAIL_PASSWORD
      - EMAIL_FROM_ADDRESS
      - "EMAIL_BASEURL=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/dashboard}"
      - "WEBHOOK_ORIGIN=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/api/}"
      - "WIDGET_LOCATION=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/widget/launch.js}"
      - "WIDGET_TEST_LOCATION=${EXTERNAL_BASE_URL:-https://uat.tile.novacept.io}/widget/assets/test_widget_page/index.html"
      - WS_SERVER_PATH     
      #PLEASE DON'T PASTE THE LICENSE KEY HERE USE .ENV FILE. DOCKER ISSUE WITH /n char
      - LICENSE_KEY
      - CACHE_ENABLED=true
      - CACHE_ENGINE=redis
      - CACHE_REDIS_HOST=redis
      - CACHE_REDIS_PORT=6379
      - APPS_ACCESS_TOKEN_SECRET=nodeauthsecret
      - BOOT_LOADING=true
      - META_GRAPH_URL=https://graph.facebook.com/v14.0/
      - WHATSAPP_LOG=false
    depends_on:
      - mongo
    ports:
      - "9000:9000"

   chat21httpserver:
    image: chat21/chat21-http-server:0.2.16
    container_name: chat21httpserver
    restart: always    
    environment: 
      - LOG_LEVEL=info
      #- AUTO_RESTART=false
      - MONGODB_URI=mongodb://mongo/chat21
      - JWT_KEY=tokenKey
      - RABBITMQ_URI=amqp://ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2YWI3MzY1Yi1hYWRhLTRlNTktOWZjZS0yMDQwZDgyOTA4MTgiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNTk0Mzc3OTc4LCJleHAiOjE2OTY5Njk5NzgsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.g2YL6RZp5SuLcQyBTYf4cn9SnRIyifNb1f1-Si1inbs@rabbitmq:5672?heartbeat=60
      - PUSH_ENABLED=true
      - FIREBASE_PRIVATE_KEY
      - FIREBASE_APIKEY
      - FIREBASE_PROJECT_ID
      - FIREBASE_CLIENT_EMAIL
      - PUSH_WH_CHAT21_API_ADMIN_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI5NGFjNjNmNy1hOGM3LTRkZGMtYjJkNS01MWE2MjBmNTdhNmIiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNjM3NzYxNDM0LCJleHAiOjE5NDg4MDE0MzQsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.fLPrGArRlnyC04552oBsUjohf6l_BIpxwB847xWvugo
      - PUSH_WH_NOTIFY_URL=http://localhost:8004/api/tilechat/notify
      - PUSH_WH_WEBHOOK_TOKEN=WHFyAhecCMkYsvldLFWbSrJt7lAZFAmrp7O5QVMvGQsLVn9SkfT
      - CACHE_ENABLED=false
      - CONTACTS_LOOKUP_ENDPOINT=http://server:9000/users_util
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - "8004:8004"

   chat21server:
    image: chat21/chat21-server:0.2.32
    container_name: chat21server
    restart: always
    environment: 
      #- AUTO_RESTART=false
      - LOG_LEVEL=info
      - MONGODB_URI=mongodb://mongo/chat21
      - APP_ID=tilechat
      - WEBHOOK_ENDPOINTS=http://server:9000/chat21/requests,http://chat21httpserver:8004/api/tilechat/push/webhook/endpoint/WHFyAhecCMkYsvldLFWbSrJt7lAZFAmrp7O5QVMvGQsLVn9SkfT
      - WEBHOOK_ENABLED=true
      - WEBHOOK_EVENTS=message-sent,message-delivered,conversation-unarchived
      - RABBITMQ_URI=amqp://ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIyMDI2NjU0Ni05ZGMxLTQ3MzgtOWE5OC01OTQwYWFmZWJkMjgiLCJzdWIiOiIwMS1PQlNFUlZFUiIsInNjb3BlIjpbInJhYmJpdG1xLnJlYWQ6Ki8qLyoiLCJyYWJiaXRtcS53cml0ZToqLyovKiIsInJhYmJpdG1xLmNvbmZpZ3VyZToqLyovKiJdLCJjbGllbnRfaWQiOiIwMS1PQlNFUlZFUiIsImNpZCI6IjAxLU9CU0VSVkVSIiwiYXpwIjoiMDEtT0JTRVJWRVIiLCJ1c2VyX2lkIjoiMDEtT0JTRVJWRVIiLCJhcHBfaWQiOiJ0aWxlY2hhdCIsImlhdCI6MTU5Mzg1OTgzNiwiZXhwIjoxNjk2NDUxODM2LCJhdWQiOlsicmFiYml0bXEiLCIwMS1PQlNFUlZFUiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJ1c2VyIn0.N6bs-WXVZJTNW2jztzph4SYc9_Szs0cb0kBM9n0k8hY@rabbitmq:5672?heartbeat=60
    depends_on:
      - mongo
      - rabbitmq
      - server 
   rabbitmq:
    image: chat21/chat21-rabbitmq
    container_name: rabbitmq
    environment:
        RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
        RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
        - 5672:5672
        - 15672:15672
        - 1883:1883
        - 15675:15675
    # healthcheck:
    #     test: [ "CMD", "nc", "-z", "localhost", "5672" ]
    #     interval: 5s
    #     timeout: 15s
    #     retries: 1
   mongo:
    container_name: mongo
    image: mongo:4.0.23
    command: --bind_ip_all
    volumes:
      - tiledesk-datadb:/data/db    
   redis:
    container_name: redis
    image: redis:7.0.5
    ports:
      - "6379:6379"

  #ngrok:
  #  container_name: ngrok
  #  image: wernight/ngrok
  #  command: ngrok http server:3000    
  #  ports:
  #   -  '4040:4040'
    
volumes:
  mongodb_data: { driver: local }
  https-portal-data:
  tiledesk-datadb: